// ----------------------------------------SHAHRIA SARKER SHUVO -----------------------------------------
//-------------------------------------CSE North South University----------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long int

#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout(v) for(auto p: v) cout<<p<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
#define all(vect) vect.begin(),vect.end()
#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())

#define F first
#define S second
#define gcd(a,b) __gcd(a,b)
#define YES cout<<"YES\n"
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO cout<<"NO\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)
const long long int N=1e9+7;
const int dx[4]= {-1,0,1,0};
const int dy[4]= {0,1,0,-1};
int main()
{
    fastkor;

      ll n;
      cin >> n;
      if(n<(1e3-1))
      {
          cout<<n;
      }
      else if(n<(1e4-1))
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          cout<<s;
      }
       else if(n<(1e5-1))
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          s[s.size()-2]='0';
          cout<<s;
      }
       else if(n<(1e6-1))
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          s[s.size()-2]='0';
          s[s.size()-3]='0';
          cout<<s;
      }
       else if(n<(1e7-1))
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          s[s.size()-2]='0';
          s[s.size()-3]='0';
          s[s.size()-4]='0';
          cout<<s;
      }
       else if(n<(1e8-1))
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          s[s.size()-2]='0';
          s[s.size()-3]='0';
          s[s.size()-4]='0';
          s[s.size()-5]='0';

          cout<<s;
      }
      else
      {
          string s=to_string(n);
          s[s.size()-1]='0';
          s[s.size()-2]='0';
          s[s.size()-3]='0';
          s[s.size()-4]='0';
          s[s.size()-5]='0';
          s[s.size()-6]='0';

          cout<<s;
      }
      cout<<"\n";
}
